0. header.jsp
//nav__right
<c:id test="${empty auth}">
<a href=${pageContext.request.contextPath }/member/loginForm">로그인</a>
<a href=${pageContext.request.contextPath }/member/registForm">회원가입</a>
</c:if>
<c:if test="${!empty auth}">
<span>${auth.name}님, 즐 하루!!!</span>
<a href="${pageContext.request.contextPath}/member/logout" id="logout">로그아웃</a>
</c:if>



1. Member.java

package com.project.www.member.dto;

import java.sql.Date;

import org.springframework.stereotype.Component;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@AllArgsConstructor
@NoArgsConstructor
@Component
public class Member {

	private String id;
	private String name;
	private String password;
	private String email;
	private Date birthday;
	private String address;
	private String gender;
	private String phone;
	
}


2. MemberController.java
package com.project.www.member.controller;

import java.util.Iterator;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.util.MultiValueMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartRequest;

import com.project.www.member.dto.Member;
import com.project.www.member.mapper.MemberMapper;
import com.project.www.member.service.MemberService;

import lombok.extern.slf4j.Slf4j;

@Controller
@RequestMapping("/member")
@Slf4j
public class MemberController {

	@Autowird
	BCryptPasswordEncoder bCryptPasswordEncoder;
	//회원가입시 비밀번호 암호화 -> DB 저장
	
	@Autowird
	MemberService memberService;
	
	//로그인
	@GetMapping("/loginForm")
	public void loginForm() {
	
	}
	
	@PostMapping("/login")
	public String login (Member member, Model model, HttpSession session){
	
		Member _member = memberService.getMember(member.getId())'
		if(_member == null){
		 	model.addAttribute("result", "id 혹은 password 오류입니다.");
		 	return "member/loginForm";
		}else{
			if(bCryptPasswordEncoder.matches(_member.getId(), _member.getPassword())){
			session.setAttribute("auth", _member);
		}else{
			model.addAttribute("result", "id 혹은 password 오류입니다.");
			return "member/loginForm";
		}
	}
	return "home";
	
	
	//로그아웃
	@GetMapping("/logout")
	public String logout(HttpSession session){
		session.invalidate(); //invalidate:session 무효화
		return "home";
	}	


	//회원가입
	@GetMapping("/registForm")
	public void registForm(){
	
	}

	@PostMapping("/regist")
	public String regist(Member member, Model model){
		String encodePassword = bCryptPasswordEncoder.encode(member.getPassword());
		member.setPassword(encodedPassword);
		memeberService.registMember(member);
		model.addAttribute("result", "success");
		return "home";
	}
	

	//중복 체크
	@GetMapping("/check_dupl")
	public @ResponseBody String check_dupl(String id){
		Member member = memberService.getMember(id)'
		if(member != null){
			return "dup";
		}
		return "no_dup";
	}
}
	

3. MemberService.java
package com.project.www.member.service;

import com.project.www.member.dto.Member;
import com.project.www.member.mapper.MemberMapper;

public interface MemberService {

	Member getMember(String id);
	
	void registMember(Member member);

}


4. MemberServiceImpl.java
package com.project.www.member.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.project.www.member.dto.Member;
import com.project.www.member.mapper.MemberMapper;

@Service
@Transactional
public class MemberServiceImpl implements MemberService {

	@Autowired
	MemberMapper memberMapper;
	
	@Ovrride
	public Member getMember(String id) {
		return memberMapper.selectOne(id);
	}
	
	@Ovrride
	public void registMember(Member member) {
		memberMapper.insert(member);
	}

}	


5. MemberMapper.java
package com.project.www.member.mapper;

import com.project.www.member.dto.Member;

import config.MyMapper;

@Mymapper
public interface MemberMapper {
	
	//MemberMapper.xml
	public Member selectOne(String id);
	
	public void insert(Member member);

}
	

6. MemberMapper.xml
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.project.www.member.mapper.MemberMapper">

	//로그인
	<select id="selectOne" resultType="com.project.www.member.dto.Member">
		select * from member where id = #{id}
	</select>
	
	//회원가입
	//insert의 반환 값 integer는 1행, 2행씩 반환
	<insert id="insert" >
		insert into member (id, name, password, email, birthday, address, gender, phone) 
		values (#{id}, #{name}, #{password}, #{email}, #{birthday}, #{address}, #{gender}, #{phone})
	</insert>

</mapper>
	
	
7. loginForm.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>

<c:set var="contextPath" value="${pageContext.request.contextPath }"></c:set>

<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Insert title here</title>
<%-- <link rel="stylesheet" type="text/css" href="${path }/resources/css/sori.css" />
<link rel="stylesheet" type="text/css" href="${path }/resources/img/reading-g1.png" /> --%>
<link rel="stylesheet" href="${contextPath }/resources/css/1.css">
<link rel="stylesheet" href="${contextPath }/resources/css/2.css">
<link rel="stylesheet" href="${contextPath }/resources/css/3.css">
<link rel="stylesheet" href="${contextPath }/resources/css/4.css">
<link rel="stylesheet" href="${contextPath }/resources/css/5.css">
<link rel="stylesheet" href="${contextPath }/resources/css/6.css">

//로그인 할 때 아이디, 비밀번호 일치 하지 않는다는 alert 창
<c:if test="${!empty result }">
	<script>
		alert("${result }")
	</script>
</c:if>

</head>
<body>

<h2> 로그인 </h2>

	<form action="${contextPath }/member/login" method="post">
		아이디 <input type="text" name="id" placeholder="아이디"/>
		비밀번호 <input type="password" name="password" placeholder="비밀번호"/>
		<input typer="submit" value="로그인" />
	</form>
	
	
8. registForm.jsp

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>    

<c:set var="contextPath" value="${pageContext.request.contextPath }"></c:set>

<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Insert title here</title>
<%-- <link rel="stylesheet" type="text/css" href="${path }/resources/css/sori.css" /> --%>
<link rel="stylesheet" href="${contextPath }/resources/css/1.css">
<link rel="stylesheet" href="${contextPath }/resources/css/2.css">
<link rel="stylesheet" href="${contextPath }/resources/css/3.css">
<link rel="stylesheet" href="${contextPath }/resources/css/4.css">
<link rel="stylesheet" href="${contextPath }/resources/css/5.css">
<link rel="stylesheet" href="${contextPath }/resources/css/6.css">

<c:if test="${!empty result }">
	<script>
		alert("${result }")
	</script>
</c:if>

</head>
<body>

<h2> 회원가입 </h2>

	<form action="${contextPath }/member/regist" method="post">
	
		<label for="id">아이디</label> <input type="text" name="id" id="id"/><button id="check_dupl" type="button">중복확인</button><span id="dup"></span><hr>
		//button에 type을 지정 안하면 submit으로 바로 날아감, type 체크 필수
		
		<label for="name">이름</label> <input type="password" name="password"/><hr>
		<label for="email">이메일</label> <input type="text" name="email"/><hr>
		<label for="birthday">생년월일</label> <input type="date" name="birthday"/><hr>
		<label for="address">주소</label> <input type="text" name="address"/><hr>
		<label for="gender">성별</label> <input type="radio" value="m" name="gender" checked/>남
										<input type="radio" value="f" name="gender" />여<hr>
		<label for="phone">전화번호</label> <input type="text" name="phone"/><hr>
		<input type="submit" value="회원가입/>
	</form>
	
	<script src="${contextPath}/resources/js/jquery.js"></script>
	
	<script>
		$(function () {
			$('#check_dupl').on("click", function() {
				let id = $('#id').val();
				let dup = $('dup');
				let url = "${contextPath}/member/check_dupl?id="+id;
				$.ajax({
					url: url,
					success: function(result) {
						if(result == 'no_dup'){
							dup.text("사용 가능한 ID입니다");
						}else{
							dup.text("이미 사용중인 ID입니다");
							$('id').val("").focus();
						}
					}
				});
			});
		});
	</script>
</body>
</html>




	
1. 로그인
2. 로그인폼
3. 로그인폼벨리데이션 
-> 100회 써보고 어떻게 할지 찾아보기